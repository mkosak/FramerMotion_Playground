{"version":3,"sources":["assets/Table_Long.svg","assets/Table_13_Round.svg","assets/Table_2.svg","assets/Plant.svg","Layout.js","Refresh.js","index.js"],"names":["module","exports","__webpack_require__","p","Layout","_ref","shapes","onDragEnd","constraintsRef","useRef","handleDragEnd","shapeId","info","console","log","point","x","y","react_default","a","createElement","Fragment","motion","div","className","ref","map","shape","i","key","id","drag","dragConstraints","dragElastic","dragMomentum","event","src","url","alt","name","button","rest","scale","hover","pressed","arrow","rotate","transition","duration","Refresh","onClick","react","variants","initial","whileHover","whileTap","svg","width","height","xmlns","d","fill","fillRule","shapesList","Table_Long","Table_13_Round","Table_2","Plant","App","_useState","useState","_useState2","Object","slicedToArray","count","setCount","_useState3","_useState5","_useState6","currentShapes","setCurrentShapes","Refresh_Refresh","newShapes","toConsumableArray","push","handleShapeClick","Layout_Layout","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.90bbb916.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Table_Long.2d6e510d.svg\";","module.exports = __webpack_public_path__ + \"static/media/Table_13_Round.47ffa361.svg\";","module.exports = __webpack_public_path__ + \"static/media/Table_2.6e443e05.svg\";","module.exports = __webpack_public_path__ + \"static/media/Plant.72493d01.svg\";","import React, { useRef } from 'react';\nimport { motion } from 'framer-motion';\nexport const Layout = ({ shapes, onDragEnd }) => {\n    const constraintsRef = useRef(null);\n    const handleDragEnd = (shapeId, info) => {\n        console.log(info.point.x, info.point.y);\n        onDragEnd(shapeId, info.point.x, info.point.y);\n    };\n    return (\n        <>\n            <>\n                <motion.div className=\"drag-area\" ref={constraintsRef} />\n                {shapes.map((shape, i) => {\n                    return (\n                        <motion.div\n                            key={i + shape.id}\n                            className=\"shape\"\n                            drag\n                            dragConstraints={constraintsRef}\n                            dragElastic={false}\n                            dragMomentum={false}\n                            onDragEnd={(event, info) => {\n                                handleDragEnd(shape.id, info);\n                            }}\n                        >\n                            <img src={shape.url} alt={shape.name} />\n                        </motion.div>\n                    );\n                })}\n            </>\n        </>\n    );\n};\n","import * as React from 'react';\nimport { motion } from 'framer-motion';\n\nconst button = {\n    rest: { scale: 1 },\n    hover: { scale: 1.1 },\n    pressed: { scale: 0.95 },\n};\nconst arrow = {\n    rest: { rotate: 0 },\n    hover: { rotate: 360, transition: { duration: 0.4 } },\n};\n\nexport const Refresh = ({ onClick }) => {\n    return (\n        <motion.div\n            className=\"refresh\"\n            onClick={onClick}\n            variants={button}\n            initial=\"rest\"\n            whileHover=\"hover\"\n            whileTap=\"pressed\"\n        >\n            <motion.svg width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" variants={arrow}>\n                <path\n                    d=\"M12.8 5.1541V2.5a.7.7 0 0 1 1.4 0v5a.7.7 0 0 1-.7.7h-5a.7.7 0 0 1 0-1.4h3.573c-.7005-1.8367-2.4886-3.1-4.5308-3.1C4.8665 3.7 2.7 5.85 2.7 8.5s2.1665 4.8 4.8422 4.8c1.3035 0 2.523-.512 3.426-1.4079a.7.7 0 0 1 .986.9938C10.7915 14.0396 9.2186 14.7 7.5422 14.7 4.0957 14.7 1.3 11.9257 1.3 8.5s2.7957-6.2 6.2422-6.2c2.1801 0 4.137 1.1192 5.2578 2.8541z\"\n                    fill=\"#fff\"\n                    fillRule=\"nonzero\"\n                />\n            </motion.svg>\n        </motion.div>\n    );\n};\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { render } from 'react-dom';\nimport { Layout } from './Layout';\nimport { Refresh } from './Refresh';\n\nimport './styles.css';\n\nimport Table_Long from './assets/Table_Long.svg';\nimport Table_13_Round from './assets/Table_13_Round.svg';\nimport Table_2 from './assets/Table_2.svg';\nimport Plant from './assets/Plant.svg';\n\nconst shapesList = [\n    {\n        id: '3245325235',\n        name: 'Table Long',\n        url: Table_Long,\n    },\n    {\n        id: '3245325234',\n        name: 'Table 13 Round',\n        url: Table_13_Round,\n    },\n    {\n        id: '3245325233',\n        name: 'Table 2',\n        url: Table_2,\n    },\n    {\n        id: '3245325232',\n        name: 'Plant',\n        url: Plant,\n    },\n];\n\nconst App = () => {\n    const [count, setCount] = useState(0);\n    const [shapes] = useState(shapesList);\n    const [currentShapes, setCurrentShapes] = useState([]);\n\n    const handleShapeClick = (shape) => {\n        console.log('shape', shape);\n        const newShapes = [...currentShapes];\n        newShapes.push(shape);\n\n        setCurrentShapes(newShapes);\n    };\n\n    const handleDragEnd = (shapeId, x, y) => {\n        console.log('handleDragEnd', shapeId, x, y);\n    };\n\n    return (\n        <>\n            <Refresh onClick={() => setCount(count + 1)} />\n\n            <aside className=\"side-panel\">\n                <ul>\n                    {shapes.map((shape, i) => {\n                        return (\n                            <li\n                                key={shape.id + i}\n                                onClick={() => {\n                                    handleShapeClick(shape);\n                                }}\n                            >\n                                <img src={shape.url} alt={shape.name} />\n                            </li>\n                        );\n                    })}\n                </ul>\n            </aside>\n\n            <Layout key={count} shapes={currentShapes} onDragEnd={handleDragEnd} />\n        </>\n    );\n};\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}